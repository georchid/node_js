1. package.json - json  файл, содержащий метаданные о проекте Node.js/ JavaScript
2. создается в корневой папке обычно
3. Содержит метаданные, такие как имя проекта, версия, описание, автор, список зависимостей и тд
4. Этот файл позводяет NPM идентифицировать проект, а так же управлять зависимостями проекта

ex: 
{
    "name" : "my-package",
    "version": "1.0.0",
    "description": "Project description",
    "main": "index.js",
    "scripts": {
        "start": "node index.js"
    },
    "keywords": [],
    "author": "",
    "license": "ISC"
}

Создание файла package.json
npm init или npm init -y для пропуска ввода метаданных (создастся шаблонный файл)

Установка пакетов из npm
npm install <package-name>
все NPM пакеты 

После установки npm пакета в файле package появится поле dependencies

Семантические номера версий
4.18.1
4 - основная версия (major version)
5 - минорная версия (minor version)
1 - патч версия (patch version)

Как обновляется номер версии
Основная версия обновляется при внесении критических изменений или обновлений
Минорная версия обновляется при добавлении нового функционала с сохранением предыдущего
Патч версия обновляется при внесении небольших изменений с сохранением предыдущего функционала

Так же существуют вета версии (предшествует релизной версии) следует после патч версии
обновление основной версии 4.18.1 -> 5.0.0
обновление минорной версии 4.18.1 -> 4.19.0
обновление патч версии 4.18.1 -> 4.18.2

Указание приемлемых обновлений пакетов в package.json
^4.18.1 - допускают минорные и патч обновления пакета при npm update
~4.18.1 - допускают только патч обновления пакета
4.18.1 - только конкретная версия

nmp update <package-name>
npm uninstall <package-name>

Глобальная установка npm пакета
npm install -g <package-name>

Список глобальных npm
npm list -g

Установка всех зависимостей, перечисленных в файле package.json
npm install

Как узнать, какую же точную версию пакета нужно установить? - в файле package-lock.json

Установка зависимостей для процесса разработки
npm install --save-dev <package-name> or npm install -D <package-name>

Установка пакетов, не относящихся к процессу разработки
npm install --omit=dev

NPM Scripts
nmp start
npm test
npm run <no-default-script-name>

npm install может изменять package-lock.json тк файл package.json имеет больший приоритет
npm i

npm ci устанавливает все зависимости строго в соответствии с package.json и package-lock.json
но ci не используется для установки отдельных пакетов
clean install надо использовать в проде